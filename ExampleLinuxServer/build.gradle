/*
 * ProtoBLE - Protobuf RPC over Bluetooth Low Energy
 * Copyright (c) 2018. Geoffrey Matrangola, electrazoom.com
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, version 3 of the License.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <https://www.gnu.org/licenses/>
 *
 *     This program is also available under a commercial license. If you wish
 *     to redistribute this library and derivative work for commercial purposes
 *     please see ProtoBLE.com to obtain a proprietary license that will fit
 *     your needs.
 */

apply plugin: 'application'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.6'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

apply plugin: 'com.google.protobuf'
apply plugin: 'idea'

protobuf {
    protoc {
        // This doesn't work on Raspberry Pi because there is no protoc compiled for arm in mavencentral.
        artifact = 'com.google.protobuf:protoc:3.5.1-1'
        // may need to specify path if protoc isn't in the usual place.
        // path = '/usr/wherever'
    }
    plugins {
        server {
            path = "${project(':CodeGen').projectDir}/build/install/CodeGen/bin/LinuxServerPlugin"
        }
    }

    generateProtoTasks {
        all().each { task ->
            task.plugins {
                server {}
            }
            task.builtins {
                remove java // common java classes already built in the :example-api-hello
            }
        }
    }
}
sourceSets {
    main {
        proto {
            srcDir "${project(':ExampleApiHello').projectDir}/src/main/proto"
        }
    }
}

idea {
    module {
        sourceDirs += file("${buildDir}/generated/source/proto/main/java")
    }
}

mainClassName = "com.electrazoom.protoble.example.HelloServer"

task echo(type:JavaExec) {
    main = 'com.electrazoom.protoble.example.EchoBytesTestServer'
    classpath = sourceSets.main.runtimeClasspath
    systemProperty "java.library.path", "/usr/lib/jni"
}

run {
    args 'Steve Wozniak', 'Bill Gates', 'Steve Jobs', 'Mark Zuckerberg', 'Geoff Matrangola'
    systemProperty "java.library.path", "/usr/lib/jni"
}

dependencies {
    implementation project(':LibProtoBLELinux')
    implementation project(':ExampleApiHello')
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.5.1'
    implementation project(':CodeGen')

    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.11'
    implementation 'ch.qos.logback:logback-classic:1.1.11'
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"
