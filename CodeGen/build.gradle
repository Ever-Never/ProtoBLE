/*
 * ProtoBLE - Protobuf RPC over Bluetooth Low Energy
 * Copyright (c) 2018. Geoffrey Matrangola, electrazoom.com
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, version 3 of the License.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <https://www.gnu.org/licenses/>
 *
 *     This program is also available under a commercial license. If you wish
 *     to redistribute this library and derivative work for commercial purposes
 *     please see ProtoBLE.com to obtain a proprietary license that will fit
 *     your needs.
 */

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.6'
    }
}

apply plugin: 'application'
apply plugin: 'com.google.protobuf'
apply plugin: 'idea'
apply plugin: 'maven'

repositories {
    mavenLocal()
    mavenCentral()
}

group 'com.electrazoom'
version '1.0-SNAPSHOT'


mainClassName = "com.electrazoom.codegen.common.BleGenerator"

task createServerScripts(type: CreateStartScripts) {
    mainClassName = 'com.electrazoom.codegen.server.LinuxServerPlugin'
    applicationName = 'LinuxServerPlugin'
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
}
installDist.dependsOn(createServerScripts)
install.dependsOn(createServerScripts)

task createAndroidClientScripts(type: CreateStartScripts) {
    mainClassName = 'com.electrazoom.codegen.android.AndroidClientPlugin'
    applicationName = 'AndroidClientPlugin'
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
}
installDist.dependsOn(createAndroidClientScripts)
install.dependsOn(createAndroidClientScripts)

task createSwiftClientScripts(type: CreateStartScripts) {
    mainClassName = 'com.electrazoom.codegen.swift.SwiftClientPlugin'
    applicationName = 'SwiftClientPlugin'
    classpath = startScripts.classpath
    outputDir = startScripts.outputDir
}
installDist.dependsOn(createSwiftClientScripts)
install.dependsOn(createSwiftClientScripts)


dependencies {
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: '3.5.1'
    implementation 'com.squareup:javapoet:1.10.0'
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'org.slf4j:slf4j-simple:1.7.25'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.11'
    testImplementation 'ch.qos.logback:logback-classic:1.1.11'
}

idea {
    module {
        sourceDirs += file("${buildDir}/generated/source/proto/main/java")
    }
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"


